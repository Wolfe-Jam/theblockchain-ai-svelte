import{json as c}from"@sveltejs/kit";import{S as d,g as A,r as C,c as I}from"../../../../chunks/cors.js";class M{components=[];constructor(t){this.components=t}search(t){const e=t.query.toLowerCase().trim();if(!e)return[];const i=[];for(const s of this.components){const n=this.calculateRelevance(s,e);n>0&&i.push({id:s.id,name:s.name,description:s.description,relevance:n,matchType:n===100?"exact":"partial",highlights:this.getHighlights(s,e)})}return i.sort((s,n)=>n.relevance-s.relevance),t.limit?i.slice(0,t.limit):i}calculateRelevance(t,e){let i=0;return t.name.toLowerCase()===e?100:(t.name.toLowerCase().includes(e)&&(i+=50),t.description.toLowerCase().includes(e)&&(i+=30),t.tags.some(s=>s.toLowerCase().includes(e))&&(i+=40),t.keywords?.some(s=>s.toLowerCase().includes(e))&&(i+=35),t.tagline?.toLowerCase().includes(e)&&(i+=25),t.consumer_tagline?.toLowerCase().includes(e)&&(i+=20),t.category.toLowerCase().includes(e)&&(i+=15),Math.min(i,99))}getHighlights(t,e){const i=[],s=(n,a)=>{const p=n.toLowerCase().indexOf(a);if(p===-1)return"";const r=Math.max(0,p-20),L=Math.min(n.length,p+a.length+20);return"..."+n.slice(r,L)+"..."};return t.description.toLowerCase().includes(e)&&i.push(s(t.description,e)),t.tagline?.toLowerCase().includes(e)&&i.push(s(t.tagline,e)),i.slice(0,2)}getSuggestions(t,e=5){const i=new Set,s=t.toLowerCase();return this.components.forEach(n=>{n.name.toLowerCase().startsWith(s)&&i.add(n.name)}),this.components.forEach(n=>{n.tags.forEach(a=>{a.toLowerCase().startsWith(s)&&i.add(a)})}),Array.from(i).slice(0,e)}}class P{apiKey;components;constructor(t,e){this.components=t,this.apiKey=e||void 0||""}async analyzeQuery(t){if(!this.apiKey||this.apiKey==="demo")return this.simulateClaudeAnalysis(t);try{const e=this.buildClaudePrompt(t);return this.simulateClaudeAnalysis(t)}catch(e){return console.error("Claude API error:",e),this.simulateClaudeAnalysis(t)}}buildClaudePrompt(t){return`You are helping users find components in a developer marketplace.

Available components:
${this.components.map(i=>`- ${i.name}: ${i.description} (tags: ${i.tags.join(", ")})`).join(`
`)}

User query: "${t}"

Analyze the user's intent and suggest the most relevant components.
Consider:
1. What problem are they trying to solve?
2. What functionality do they need?
3. Are there alternative ways to phrase their need?

Respond with:
1. The user's likely intent
2. Top 3 most relevant component IDs
3. A brief explanation of why these match
4. Alternative search queries they might try`}simulateClaudeAnalysis(t){const e=t.toLowerCase(),i={userIntent:"",suggestedProducts:[],explanation:"",alternativeQueries:[]};return e.includes("pay")||e.includes("money")||e.includes("checkout")||e.includes("billing")||e.includes("charge")||e.includes("accept")?(i.userIntent="User wants to accept payments or handle transactions",i.suggestedProducts=["1"],i.explanation="NOBS Pay is a universal payment component that handles credit cards, PayPal, and cryptocurrency - perfect for accepting payments.",i.alternativeQueries=["payment gateway","checkout component","stripe integration"]):e.includes("auth")||e.includes("login")||e.includes("user")||e.includes("sign")||e.includes("identity")?(i.userIntent="User needs authentication or user management",i.suggestedProducts=[],i.explanation="Looking for authentication components (coming soon to the marketplace).",i.alternativeQueries=["user authentication","login system","auth component"]):e.includes("blockchain")||e.includes("smart contract")||e.includes("web3")||e.includes("ethereum")?(i.userIntent="User wants to work with blockchain or smart contracts",i.suggestedProducts=[],i.explanation="Searching for blockchain and Web3 components.",i.alternativeQueries=["smart contract tools","blockchain integration","web3 components"]):(i.userIntent="User is exploring available components",i.suggestedProducts=["1"],i.explanation="Showing featured components. Try being more specific about what functionality you need.",i.alternativeQueries=["payment component","authentication","blockchain tools"]),i}async getSmartResults(t){const e=await this.analyzeQuery(t),i=[];return e.suggestedProducts.forEach((s,n)=>{const a=this.components.find(p=>p.id===s);a&&i.push({id:a.id,name:a.name,slug:a.slug,description:a.description,category:a.category,tags:a.tags,relevanceScore:1-n*.1,matchType:"ai-suggested",explanation:e.explanation})}),i}async generateSuggestions(t){const e=[];return t.startsWith("pay")?e.push("payment component","payment gateway","paypal integration"):t.startsWith("auth")?e.push("authentication system","auth component","authorization"):t.startsWith("block")?e.push("blockchain tools","blockchain integration"):t.includes("how")&&e.push("how to accept payments","how to add authentication"),e.slice(0,5)}}class S{static validateSearchQuery(t){return!t||typeof t!="string"?"Query must be a string":t.length===0?"Query cannot be empty":t.length>500?"Query too long (max 500 characters)":/<script[^>]*>|javascript:|on\w+\s*=/i.test(t)?"Invalid characters detected in query":[/(\b(union|select|insert|delete|drop|update|create|alter|exec|execute)\b)/i,/(--|\/\*|\*\/|;)/,/(0x[0-9a-f]+)/i].some(i=>i.test(t))?"Invalid query content detected":/(\.\.|\\|\/etc\/|\/proc\/|cmd\.exe)/i.test(t)?"Suspicious characters detected":null}static sanitizeQuery(t){return t.trim().replace(/[<>]/g,"").replace(/["']/g,"").replace(/[^\w\s\-.,!?]/g,"").substring(0,500)}static validateEmail(t){return!t||typeof t!="string"?"Email must be a string":t.length>254?"Email too long":/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)?/<script|javascript:|on\w+=/i.test(t)?"Invalid characters in email":null:"Invalid email format"}static validateMode(t){return!t||typeof t!="string"?"Mode must be a string":["hybrid","traditional","claude-smarts"].includes(t)?null:"Invalid search mode"}static sanitizeText(t,e=1e3){return t.trim().replace(/[<>]/g,"").replace(/[^\w\s\-.,!?@]/g,"").substring(0,e)}}const x=[{id:"1",name:"NOBS Pay",slug:"nobs-pay",tagline:"Universal payment component for modern apps",description:"The only payment component that gives your users maximum choice while giving you minimum complexity. Accept credit cards, PayPal, and cryptocurrency with one simple integration.",consumer_tagline:"No BS payment solution",api_name:"Next Open Billing Software",formal_name:"Neural Omni Balance System",fintech_name:"Next Open Billing Stack",price_individual:19900,price_team:49900,price_enterprise:149900,category:"payment-processing",tags:["payment","stripe","paypal","crypto","checkout","e-commerce"],keywords:["payment gateway","checkout","e-commerce","billing","transactions"],tech_stack:["svelte","typescript","stripe-api"],flip_card_theme:"wallet",flip_card_size:"standard",rating:5,download_count:0,featured:!0,is_api_product:!0,is_active:!0,is_published:!0,created_at:new Date().toISOString(),demo_url:"/marketplace/demo/nobs-pay",developer_features:["Universal payment gateway","Multi-processor support","TypeScript definitions"]}],X=async({request:l,getClientAddress:t})=>{const e=t(),i=l.headers.get("origin"),s=l.headers.get("user-agent"),n=A(i);try{if(d.shouldBlockIP(e))return d.logSecurityEvent({type:"suspicious_request",ip:e,userAgent:s,endpoint:"/api/search",details:{reason:"blocked_ip"}}),c({error:"Access denied"},{status:403,headers:n});const a=d.getProgressivePenalty(e),p=`search:${e}`,r=await C.checkLimit(p,10,Math.max(60,a));if(!r.allowed)return d.logSecurityEvent({type:"rate_limit",ip:e,userAgent:s,endpoint:"/api/search",details:{limit:10,window:60,penalty:a,retryAfter:r.retryAfter}}),c({error:"Rate limit exceeded"},{status:429,headers:{...n,"X-RateLimit-Limit":"10","X-RateLimit-Remaining":String(r.remaining),"X-RateLimit-Reset":String(r.resetTime),"Retry-After":String(r.retryAfter||60)}});const L=await l.json(),{query:g,mode:h="hybrid"}=L,b=S.validateSearchQuery(g);if(b)return d.logSecurityEvent({type:"invalid_input",ip:e,userAgent:s,endpoint:"/api/search",details:{error:b,query:typeof g=="string"?g.substring(0,50):"invalid_type",queryLength:typeof g=="string"?g.length:0}}),c({error:b},{status:400,headers:n});const _=S.validateMode(h);if(_)return d.logSecurityEvent({type:"invalid_input",ip:e,userAgent:s,endpoint:"/api/search",details:{error:_,mode:h}}),c({error:_},{status:400,headers:n});const u=S.sanitizeQuery(g);if(await d.checkForSuspiciousActivity(e))return d.logSecurityEvent({type:"suspicious_request",ip:e,userAgent:s,endpoint:"/api/search",details:{reason:"suspicious_activity_pattern"}}),c({error:"Request blocked due to suspicious activity"},{status:403,headers:n});const R=new M(x),k=new P(x);let y=[],v=Date.now();try{if(h==="claude-smarts")y=await k.getSmartResults(u);else if(h==="traditional")y=R.traditionalSearch(u);else{const f=R.traditionalSearch(u);if((u.split(" ").length>3||u.includes("how")||u.includes("need")||u.includes("want"))&&f.length<3){const E=await k.getSmartResults(u),w=new Map;f.forEach(o=>w.set(o.id,o)),E.forEach(o=>{if(!w.has(o.id))w.set(o.id,o);else{const m=w.get(o.id);m.relevanceScore=Math.min(1,m.relevanceScore*1.5),m.matchType="semantic",o.explanation&&(m.explanation=o.explanation)}}),y=Array.from(w.values()).sort((o,m)=>m.relevanceScore-o.relevanceScore)}else y=f}v=Date.now()-v}catch(f){return console.error("Search execution error:",f),d.logSecurityEvent({type:"suspicious_request",ip:e,userAgent:s,endpoint:"/api/search",details:{error:"search_execution_failed",query:u.substring(0,50)}}),c({error:"Search failed"},{status:500,headers:n})}return c({results:y,query:u,mode:h,searchTime:v,timestamp:new Date().toISOString()},{headers:{...n,"X-RateLimit-Limit":"10","X-RateLimit-Remaining":String(r.remaining),"X-RateLimit-Reset":String(r.resetTime),"X-Response-Time":`${v}ms`}})}catch(a){return d.logSecurityEvent({type:"suspicious_request",ip:e,userAgent:s,endpoint:"/api/search",details:{error:"unexpected_error",message:a instanceof Error?a.message:"unknown_error"}}),c({error:"Search failed"},{status:500,headers:n})}},$=async({request:l})=>I(l.headers.get("origin")),W=async({url:l,getClientAddress:t})=>{const e=t(),i=l.searchParams.get("q")||"",s=`suggestions:${e}`,n=await C.checkLimit(s,20,60);if(!n.allowed)return c({suggestions:[]},{status:429,headers:{"X-RateLimit-Limit":"20","X-RateLimit-Remaining":"0"}});if(i.length<2||i.length>100)return c({suggestions:[]});const a=S.sanitizeQuery(i),r=await new P(x).generateSuggestions(a);return c({suggestions:r,query:a},{headers:{"X-RateLimit-Limit":"20","X-RateLimit-Remaining":String(n.remaining)}})};export{W as GET,$ as OPTIONS,X as POST};
