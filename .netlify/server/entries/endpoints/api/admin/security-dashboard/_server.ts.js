import{json as i}from"@sveltejs/kit";import{g as p,S as u,r as b}from"../../../../../chunks/cors.js";const N=async({request:r,url:n,getClientAddress:c})=>{const s=r.headers.get("origin"),a=p(s);try{const o=r.headers.get("authorization"),l=process.env.ADMIN_API_KEY||process.env.INTERNAL_API_KEY;if(!o||!l||o!==`Bearer ${l}`)return i({error:"Unauthorized"},{status:401,headers:a});const E=n.searchParams.get("timeRange")||"1h",w=parseInt(n.searchParams.get("limit")||"100"),v={"1h":36e5,"24h":864e5,"7d":6048e5,"30d":2592e6},y=v[E]||v["1h"],d=u.getSecurityStats(y),S=u.getRecentEvents(w),m=b.getStats(),D=Date.now()-y,I=S.filter(e=>new Date(e.timestamp).getTime()>D),h={};I.forEach(e=>{h[e.endpoint]=(h[e.endpoint]||0)+1});const P=Object.entries(h).sort(([,e],[,t])=>t-e).slice(0,10).map(([e,t])=>({endpoint:e,count:t})),g={};I.forEach(e=>{const t=new Date(e.timestamp).toISOString().substring(0,13)+":00:00.000Z";g[t]=(g[t]||0)+1});const T=Object.entries(g).sort(([e],[t])=>new Date(e).getTime()-new Date(t).getTime()).map(([e,t])=>({timestamp:e,count:t})),f={summary:{timeRange:E,totalEvents:d.totalEvents,totalUniqueIPs:d.topIPs.length,rateLimiterBackend:m.backend,timestamp:new Date().toISOString()},eventsByType:d.eventsByType,topIPs:d.topIPs,topEndpoints:P,trends:T,recentEvents:S.slice(0,50),rateLimiterStats:m,healthStatus:{securityMonitoring:"active",rateLimiting:m.backend==="redis"?"optimal":"fallback",corsProtection:"active",inputValidation:"active"}};return i(f,{headers:a})}catch(o){return console.error("Security dashboard error:",o),i({error:"Dashboard unavailable"},{status:500,headers:a})}},O=async({request:r})=>{const n=r.headers.get("origin"),c=p(n);try{const s=r.headers.get("authorization"),a=process.env.ADMIN_API_KEY||process.env.INTERNAL_API_KEY;if(!s||!a||s!==`Bearer ${a}`)return i({error:"Unauthorized"},{status:401,headers:c});const o=u.getRecentEvents(100);return i({message:"Security events cleared",remaining:o.length,timestamp:new Date().toISOString()},{headers:c})}catch(s){return console.error("Security clear error:",s),i({error:"Clear operation failed"},{status:500,headers:c})}},R=async({request:r})=>{const n=r.headers.get("origin");return new Response(null,{status:204,headers:p(n)})};export{O as DELETE,N as GET,R as OPTIONS};
