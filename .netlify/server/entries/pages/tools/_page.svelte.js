import{c as i,e,d as l,f as d}from"../../../chunks/ssr.js";const c={code:".loader.svelte-181uuui{width:20px;height:20px;border:2px solid #FFF;border-bottom-color:#ea580c;border-radius:50%;display:inline-block;box-sizing:border-box;animation:svelte-181uuui-rotation 1s linear infinite}@keyframes svelte-181uuui-rotation{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.deep-dive-label.svelte-181uuui{font-size:1rem;font-weight:700;letter-spacing:0.2em;text-transform:uppercase;color:#0cc0df;position:relative;display:inline-block}.deep-dive-label.svelte-181uuui::after{content:'';position:absolute;bottom:-4px;left:50%;transform:translateX(-50%);width:60px;height:2px;background:#0cc0df;opacity:0.6}",map:`{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<!-- AI Tools Page - Smart Contract Generator -->\\n<script>\\n  import { onMount } from 'svelte';\\n  \\n  let promptInput = '';\\n  let generatedCode = '';\\n  let isGenerating = false;\\n  let showResult = false;\\n  let copyButtonText = 'Copy';\\n  let apiError = '';\\n  let selectedModel = 'free'; // Track model selection\\n  \\n  // Professional Gemini API integration with environment variables\\n  async function callGemini(prompt) {\\n    const apiKey = import.meta.env.VITE_GEMINI_API_KEY;\\n    \\n    if (!apiKey) {\\n      throw new Error(\\"Gemini API key not configured. Please add VITE_GEMINI_API_KEY to your environment variables.\\");\\n    }\\n    \\n    const apiUrl = \`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\${apiKey}\`;\\n    \\n    const payload = {\\n      contents: [{ \\n        role: \\"user\\", \\n        parts: [{ \\n          text: \`Act as an expert Solidity developer. Based on the following request, generate a complete, well-commented, and secure boilerplate smart contract using Solidity ^0.8.20. The request is: \\"\${prompt}\\". The contract should be clean, production-ready code with proper error handling and security considerations.\`\\n        }] \\n      }]\\n    };\\n    \\n    const response = await fetch(apiUrl, {\\n      method: 'POST',\\n      headers: { 'Content-Type': 'application/json' },\\n      body: JSON.stringify(payload)\\n    });\\n    \\n    if (!response.ok) {\\n      throw new Error(\`API Error: \${response.statusText}\`);\\n    }\\n    \\n    const result = await response.json();\\n    if (result.candidates?.[0]?.content?.parts?.[0]) {\\n      const responseText = result.candidates[0].content.parts[0].text;\\n      return responseText.replace(/^\`\`\`solidity\\\\n|\`\`\`$/g, '').trim();\\n    }\\n    \\n    throw new Error(\\"Invalid response structure from API.\\");\\n  }\\n  \\n  // Enhanced generate function with model selection\\n  async function generateContract() {\\n    if (!promptInput.trim()) return;\\n    \\n    // Handle premium model selection (preview for now)\\n    if (selectedModel === 'premium') {\\n      // For now, show upgrade prompt - later this will call premium APIs\\n      apiError = \`ðŸ”’ Premium Feature: Advanced AI models (GPT-4o, Claude Sonnet 4) require a Pro subscription. \\n      \\nPremium benefits:\\nâ€¢ 2-3x better code quality\\nâ€¢ Advanced security patterns  \\nâ€¢ Gas optimization\\nâ€¢ Production-ready architecture\\nâ€¢ Unlimited generations\\n\\nReady to upgrade? Contact us for early access pricing.\`;\\n      showResult = true;\\n      return;\\n    }\\n    \\n    isGenerating = true;\\n    showResult = false;\\n    apiError = '';\\n    \\n    try {\\n      let code;\\n      try {\\n        code = await callGemini(promptInput);\\n      } catch (geminiError) {\\n        console.log('Gemini API failed, falling back to Netlify function:', geminiError);\\n        \\n        const response = await fetch('/.netlify/functions/gemini', {\\n          method: 'POST',\\n          headers: { 'Content-Type': 'application/json' },\\n          body: JSON.stringify({\\n            prompt: \`Act as an expert Solidity developer. Based on the following request, generate a complete, well-commented, and secure boilerplate smart contract using Solidity ^0.8.20. The request is: \\"\${promptInput}\\". The contract should be clean, production-ready code with proper error handling and security considerations.\`\\n          })\\n        });\\n        \\n        const data = await response.json();\\n        if (data.candidates?.[0]?.content?.parts?.[0]) {\\n          const responseText = data.candidates[0].content.parts[0].text;\\n          code = responseText.replace(/^\`\`\`solidity\\\\n|\`\`\`$/g, '').trim();\\n        } else {\\n          code = 'Error generating contract. Please try again.';\\n        }\\n      }\\n      \\n      generatedCode = code || 'Error generating contract. Please try again.';\\n      codeEvaluation = evaluateCode(generatedCode);\\n      showResult = true;\\n      \\n    } catch (error) {\\n      console.error('Contract generation error:', error);\\n      apiError = 'Sorry, an error occurred while generating the contract. Please check your internet connection and try again.';\\n      showResult = true;\\n    } finally {\\n      isGenerating = false;\\n    }\\n  }\\n  \\n  async function copyToClipboard() {\\n    try {\\n      await navigator.clipboard.writeText(generatedCode);\\n      copyButtonText = 'Copied!';\\n      setTimeout(() => {\\n        copyButtonText = 'Copy';\\n      }, 2000);\\n    } catch (error) {\\n      const textarea = document.createElement('textarea');\\n      textarea.value = generatedCode;\\n      document.body.appendChild(textarea);\\n      textarea.select();\\n      document.execCommand('copy');\\n      document.body.removeChild(textarea);\\n      copyButtonText = 'Copied!';\\n      setTimeout(() => {\\n        copyButtonText = 'Copy';\\n      }, 2000);\\n    }\\n  }\\n  \\n  const examplePrompts = [\\n    \\"An ERC-1155 contract where the minting fee is split 90% to the artist and 10% to the platform.\\",\\n    \\"A simple voting contract where users can vote on proposals with a deadline.\\",\\n    \\"An ERC20 token with built-in staking rewards for holders.\\",\\n    \\"A marketplace contract for buying and selling digital assets with escrow functionality.\\",\\n    \\"A time-locked vault contract that releases tokens after a specific date.\\",\\n    \\"A multi-signature wallet contract requiring 2 out of 3 signatures for transactions.\\"\\n  ];\\n  \\n  function useExamplePrompt(prompt) {\\n    promptInput = prompt;\\n  }\\n  \\n  let spotsLeft = 0;\\n  let codeEvaluation = null;\\n  \\n  // Dynamic code evaluation function - Balanced UX with accurate scoring\\n  function evaluateCode(code) {\\n    if (!code || code.length < 100) return null;\\n    \\n    const evaluation = {\\n      foundationScore: 7, // Good baseline for AI-generated code\\n      securityScore: 6,   // Decent baseline, but needs validation\\n      developmentStage: \\"Boilerplate\\",\\n      timeToProduction: \\"2-4 hours\\",\\n      goodFeatures: [],\\n      nextSteps: [],\\n      devTasks: []\\n    };\\n    \\n    // Check for security features\\n    if (code.includes('@openzeppelin/contracts')) {\\n      evaluation.securityScore += 1;\\n      evaluation.foundationScore += 1;\\n      evaluation.goodFeatures.push('Industry-standard OpenZeppelin foundation');\\n    }\\n    if (code.includes('Ownable') || code.includes('AccessControl')) {\\n      evaluation.securityScore += 1;\\n      evaluation.goodFeatures.push('Professional access control patterns');\\n    }\\n    if (code.includes('require(') && code.includes('!= address(0)')) {\\n      evaluation.foundationScore += 1;\\n      evaluation.goodFeatures.push('Comprehensive input validation');\\n    }\\n    \\n    // Advanced security checks\\n    if (code.includes('ReentrancyGuard') || code.includes('nonReentrant')) {\\n      evaluation.securityScore += 2;\\n      evaluation.goodFeatures.push('Advanced reentrancy protection');\\n    } else if (code.includes('transfer(') || code.includes('.call(')) {\\n      evaluation.securityScore -= 1;\\n      evaluation.nextSteps.push('Add reentrancy protection');\\n      evaluation.devTasks.push('Implement ReentrancyGuard');\\n    }\\n    \\n    // Check for documentation (positive but not overly generous)\\n    if (code.includes('/**') || code.includes('@dev') || code.includes('@param')) {\\n      evaluation.goodFeatures.push('Professional documentation standards');\\n    }\\n    \\n    // Production readiness issues (more strict detection)\\n    if (code.includes('DO NOT USE IN PRODUCTION') || code.includes('for testing only')) {\\n      evaluation.foundationScore -= 2;\\n      evaluation.securityScore -= 2;\\n      evaluation.nextSteps.push('Remove or secure testing functions');\\n      evaluation.devTasks.push('Address production warnings');\\n    }\\n    \\n    if (code.includes('placeholder') || code.includes('TODO') || code.includes('not implemented')) {\\n      evaluation.foundationScore -= 1;\\n      evaluation.developmentStage = \\"Ready for customization\\";\\n      evaluation.nextSteps.push('Complete custom business logic');\\n      evaluation.devTasks.push('Implement core functionality');\\n    }\\n    \\n    // SafeMath in 0.8+ (minor issue)\\n    if (code.includes('SafeMath') && code.includes('0.8.')) {\\n      evaluation.nextSteps.push('Consider removing unnecessary SafeMath');\\n    }\\n    \\n    // Transfer vs sendValue detection\\n    if (code.includes('.transfer(') && !code.includes('sendValue')) {\\n      evaluation.securityScore -= 1;\\n      evaluation.nextSteps.push('Use OpenZeppelin Address.sendValue for safer transfers');\\n      evaluation.devTasks.push('Replace transfer() with sendValue()');\\n    }\\n    \\n    if (!code.includes('test') && !code.includes('Test')) {\\n      evaluation.nextSteps.push('Add comprehensive testing');\\n      evaluation.devTasks.push('Write test suite');\\n    }\\n    \\n    if (code.includes('withdraw') && !code.includes('mapping.*earnings')) {\\n      evaluation.nextSteps.push('Implement proper accounting');\\n      evaluation.devTasks.push('Add balance tracking system');\\n    }\\n    \\n    // Ensure realistic scoring bounds\\n    evaluation.foundationScore = Math.max(4, Math.min(9, evaluation.foundationScore));\\n    evaluation.securityScore = Math.max(3, Math.min(9, evaluation.securityScore));\\n    \\n    // Add standard good features if none detected\\n    if (evaluation.goodFeatures.length === 0) {\\n      evaluation.goodFeatures.push('Clean, structured smart contract foundation');\\n    }\\n    \\n    // Add encouraging but realistic context\\n    if (evaluation.foundationScore >= 8) {\\n      evaluation.foundationQuality = \\"Excellent foundation\\";\\n    } else if (evaluation.foundationScore >= 7) {\\n      evaluation.foundationQuality = \\"Solid foundation\\";  \\n    } else if (evaluation.foundationScore >= 6) {\\n      evaluation.foundationQuality = \\"Good starting point\\";\\n    } else {\\n      evaluation.foundationQuality = \\"Needs refinement\\";\\n    }\\n    \\n    return evaluation;\\n  }\\n  \\n  // Function to calculate contracts generated today (minutes since midnight EST)\\n  function calculateContractsGenerated() {\\n    // Get current time in Eastern Time (handles EST/EDT automatically)\\n    const easternTime = new Date().toLocaleString(\\"en-US\\", {\\n      timeZone: \\"America/New_York\\"\\n    });\\n    \\n    const now = new Date(easternTime);\\n    \\n    // Get midnight of today in Eastern Time\\n    const midnight = new Date(now);\\n    midnight.setHours(0, 0, 0, 0);\\n    \\n    // Calculate minutes since midnight\\n    const minutesSinceMidnight = Math.floor((now.getTime() - midnight.getTime()) / (1000 * 60));\\n    \\n    return Math.max(0, minutesSinceMidnight);\\n  }\\n  \\n  onMount(() => {\\n    // Initialize the counter\\n    spotsLeft = calculateContractsGenerated();\\n    \\n    // Update every minute (60,000 milliseconds)\\n    const interval = setInterval(() => {\\n      spotsLeft = calculateContractsGenerated();\\n    }, 60000);\\n    \\n    return () => clearInterval(interval);\\n  });\\n<\/script>\\n\\n<svelte:head>\\n  <title>Smart Contract Generator | theBlockchain.ai</title>\\n  <meta name=\\"description\\" content=\\"Generate Solidity smart contracts using AI. Describe your logic in plain English and get production-ready code.\\" />\\n</svelte:head>\\n\\n<!-- Main Tools Interface -->\\n<div class=\\"min-h-screen bg-slate-900 text-white\\">\\n  <div class=\\"relative bg-gradient-to-br from-orange-900 via-slate-800 to-slate-900\\">\\n    <div class=\\"absolute inset-0 bg-black/20\\"></div>\\n    <div class=\\"relative max-w-5xl mx-auto px-6 py-24\\">\\n      <div class=\\"text-center\\">\\n        <div class=\\"deep-dive-label mb-6\\">\\n          âœ¨ AI-POWERED TOOLS\\n        </div>\\n        <h1 class=\\"text-4xl md:text-6xl font-black mb-6 leading-tight\\">\\n          <span class=\\"block text-white\\">\\n            SMART CONTRACT\\n          </span>\\n          <span class=\\"block bg-gradient-to-r from-orange-500 to-cyan-400 bg-clip-text text-transparent\\">\\n            GENERATOR\\n          </span>\\n        </h1>\\n        <p class=\\"text-xl md:text-2xl text-slate-300 max-w-4xl mx-auto leading-relaxed mb-8\\">\\n          Have an idea for a protocol? Describe the logic in plain English, and let Gemini generate the Solidity boilerplate. Your next project starts here.\\n        </p>\\n        \\n        <div class=\\"inline-flex items-center bg-slate-800/50 rounded-full px-6 py-3 border border-orange-500/30\\">\\n          <div class=\\"w-2 h-2 bg-orange-500 rounded-full animate-pulse mr-3\\"></div>\\n          <span class=\\"text-orange-600 font-mono font-bold\\">{spotsLeft}</span>\\n          <span class=\\"text-slate-300 ml-2\\">contracts generated today</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\"max-w-5xl mx-auto px-6 py-16\\">\\n    \\n    <!-- Model Selection -->\\n    <div class=\\"bg-gradient-to-r from-slate-800 to-slate-700 rounded-xl p-6 mb-6 border border-slate-600\\">\\n      <h3 class=\\"text-lg font-bold text-white mb-4 flex items-center\\">\\n        <i class=\\"fas fa-robot mr-2 text-cyan-400\\"></i>\\n        Choose Your AI Model\\n      </h3>\\n      \\n      <div class=\\"grid md:grid-cols-2 gap-4\\">\\n        <!-- Free Model -->\\n        <label class=\\"cursor-pointer\\">\\n          <input \\n            type=\\"radio\\" \\n            bind:group={selectedModel} \\n            value=\\"free\\"\\n            class=\\"sr-only\\"\\n          />\\n          <div class=\\"relative p-4 rounded-lg border-2 transition-all duration-300\\"\\n               class:border-cyan-400={selectedModel === 'free'}\\n               class:border-slate-600={selectedModel !== 'free'}\\n               class:bg-slate-800={selectedModel !== 'free'}\\n               style=\\"background-color: {selectedModel === 'free' ? 'rgba(6, 182, 212, 0.1)' : 'rgba(30, 41, 59, 0.5)'}\\">>\\n            <div class=\\"flex items-center justify-between mb-2\\">\\n              <h4 class=\\"text-lg font-bold text-white flex items-center\\">\\n                <span class=\\"bg-green-500 text-white px-2 py-1 rounded text-xs font-bold mr-2\\">FREE</span>\\n                Basic Generator\\n              </h4>\\n              {#if selectedModel === 'free'}\\n                <i class=\\"fas fa-check-circle text-cyan-400 text-xl\\"></i>\\n              {/if}\\n            </div>\\n            <p class=\\"text-slate-300 text-sm mb-3\\">Perfect for learning and prototyping</p>\\n            <ul class=\\"text-xs text-slate-400 space-y-1\\">\\n              <li>â€¢ Gemini 2.0 Flash</li>\\n              <li>â€¢ 5 generations per day</li>\\n              <li>â€¢ Basic security analysis</li>\\n              <li>â€¢ Standard templates</li>\\n            </ul>\\n          </div>\\n        </label>\\n        \\n        <!-- Premium Model -->\\n        <label class=\\"cursor-pointer\\">\\n          <input \\n            type=\\"radio\\" \\n            bind:group={selectedModel} \\n            value=\\"premium\\"\\n            class=\\"sr-only\\"\\n          />\\n          <div class=\\"relative p-4 rounded-lg border-2 transition-all duration-300\\"\\n               class:border-orange-400={selectedModel === 'premium'}\\n               class:border-slate-600={selectedModel !== 'premium'}\\n               class:bg-slate-800={selectedModel !== 'premium'}\\n               style=\\"background-color: {selectedModel === 'premium' ? 'rgba(251, 146, 60, 0.1)' : 'rgba(30, 41, 59, 0.5)'}\\">>\\n            <div class=\\"flex items-center justify-between mb-2\\">\\n              <h4 class=\\"text-lg font-bold text-white flex items-center\\">\\n                <span class=\\"bg-gradient-to-r from-orange-500 to-pink-500 text-white px-2 py-1 rounded text-xs font-bold mr-2\\">PRO</span>\\n                Advanced Generator\\n              </h4>\\n              {#if selectedModel === 'premium'}\\n                <i class=\\"fas fa-check-circle text-orange-400 text-xl\\"></i>\\n              {/if}\\n            </div>\\n            <p class=\\"text-slate-300 text-sm mb-3\\">Production-ready foundations</p>\\n            <ul class=\\"text-xs text-slate-400 space-y-1\\">\\n              <li>â€¢ GPT-4o + Claude Sonnet 4</li>\\n              <li>â€¢ Unlimited generations</li>\\n              <li>â€¢ Advanced security analysis</li>\\n              <li>â€¢ Gas optimization</li>\\n              <li>â€¢ Priority support</li>\\n            </ul>\\n            {#if selectedModel !== 'premium'}\\n              <div class=\\"mt-3 pt-3 border-t border-slate-600\\">\\n                <span class=\\"text-orange-400 font-semibold text-sm\\">$29/month</span>\\n                <span class=\\"text-slate-500 text-xs ml-2\\">Try free for 7 days</span>\\n              </div>\\n            {/if}\\n          </div>\\n        </label>\\n      </div>\\n      \\n      {#if selectedModel === 'premium'}\\n        <div class=\\"mt-4 p-3 bg-orange-500/10 border border-orange-400/30 rounded-lg\\">\\n          <p class=\\"text-orange-300 text-sm flex items-center\\">\\n            <i class=\\"fas fa-crown mr-2\\"></i>\\n            <strong>Premium Preview:</strong> Experience enterprise-grade smart contract generation with advanced AI models.\\n          </p>\\n        </div>\\n      {/if}\\n    </div>\\n    \\n    <div class=\\"bg-slate-800 rounded-xl p-8 mb-8 border border-slate-700\\">\\n      <label for=\\"prompt-input\\" class=\\"block text-xl font-bold mb-4 text-cyan-400\\">\\n        <i class=\\"fas fa-code mr-2\\"></i>\\n        Describe your smart contract logic:\\n      </label>\\n      \\n      <div class=\\"relative\\">\\n        <textarea \\n          id=\\"prompt-input\\"\\n          bind:value={promptInput}\\n          placeholder=\\"e.g., An ERC721 contract where the minting fee is split 90% to the artist and 10% to the platform...\\"\\n          class=\\"w-full h-36 bg-slate-900 border-2 border-slate-600 rounded-lg p-4 text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-cyan-400 resize-none transition-all duration-300\\"\\n          disabled={isGenerating}\\n        ></textarea>\\n        \\n        <div class=\\"absolute bottom-3 right-3 text-xs text-slate-500\\">\\n          {promptInput.length} characters\\n        </div>\\n      </div>\\n      \\n      <div class=\\"flex items-center justify-between mt-6\\">\\n        <button \\n          on:click={generateContract}\\n          disabled={isGenerating || !promptInput.trim()}\\n          class=\\"bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 disabled:from-slate-600 disabled:to-slate-600 disabled:cursor-not-allowed text-white font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 disabled:hover:scale-100 shadow-lg\\"\\n        >\\n          {#if isGenerating}\\n            <div class=\\"flex items-center gap-3\\">\\n              <div class=\\"loader\\"></div>\\n              <span>Generating with Gemini...</span>\\n            </div>\\n          {:else}\\n            <i class=\\"fas fa-magic mr-2\\"></i>\\n            {#if selectedModel === 'premium'}\\n              Generate with Premium AI\\n            {:else}\\n              Generate Solidity Contract  \\n            {/if}\\n          {/if}\\n        </button>\\n        \\n        <div class=\\"flex items-center text-slate-400 text-sm\\">\\n          {#if selectedModel === 'premium'}\\n            <i class=\\"fas fa-crown text-orange-400 mr-1\\"></i>\\n            Powered by GPT-4o + Claude Sonnet 4\\n          {:else}\\n            Powered by ðŸ§  Gemini 2.0 Flash\\n          {/if}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\"mb-8\\">\\n      <h3 class=\\"text-2xl font-bold mb-6 text-white flex items-center\\">\\n        <i class=\\"fas fa-lightbulb text-yellow-400 mr-3\\"></i>\\n        Try these examples:\\n      </h3>\\n      <div class=\\"grid md:grid-cols-2 gap-4\\">\\n        {#each examplePrompts as prompt, index}\\n          <button \\n            on:click={() => useExamplePrompt(prompt)}\\n            class=\\"text-left bg-slate-700 hover:bg-slate-600 p-4 rounded-lg transition-all duration-300 text-slate-300 hover:text-white border border-slate-600 hover:border-cyan-400 group\\"\\n          >\\n            <div class=\\"flex items-start gap-3\\">\\n              <div class=\\"w-6 h-6 bg-cyan-400 text-slate-900 rounded-full flex items-center justify-center font-bold text-sm group-hover:bg-orange-500 transition-colors\\">\\n                {index + 1}\\n              </div>\\n              <div class=\\"flex-1\\">\\n                <p class=\\"text-sm leading-relaxed\\">\\"{prompt}\\"</p>\\n              </div>\\n            </div>\\n          </button>\\n        {/each}\\n      </div>\\n    </div>\\n\\n    {#if showResult}\\n      <div class=\\"bg-slate-800 rounded-xl p-8 mb-8 border border-slate-700\\">\\n        <div class=\\"flex items-center justify-between mb-6\\">\\n          <h3 class=\\"text-2xl font-bold text-cyan-400 flex items-center\\">\\n            <i class=\\"fas fa-file-code mr-3\\"></i>\\n            Generated Smart Contract\\n          </h3>\\n          \\n          {#if !apiError}\\n            <button \\n              on:click={copyToClipboard}\\n              class=\\"bg-cyan-500 hover:bg-cyan-600 text-white px-6 py-3 rounded-lg transition-all duration-300 flex items-center gap-2 font-semibold transform hover:scale-105\\"\\n              class:bg-green-500={copyButtonText === 'Copied!'}\\n              class:hover:bg-green-600={copyButtonText === 'Copied!'}\\n            >\\n              {#if copyButtonText === 'Copied!'}\\n                <i class=\\"fas fa-check\\"></i>\\n              {:else}\\n                <i class=\\"fas fa-copy\\"></i>\\n              {/if}\\n              {copyButtonText}\\n            </button>\\n          {/if}\\n        </div>\\n        \\n        {#if apiError}\\n          {#if apiError.includes('ðŸ”’ Premium Feature')}\\n            <!-- Premium upgrade message -->\\n            <div class=\\"bg-gradient-to-br from-orange-900/20 to-pink-900/20 border border-orange-500/30 rounded-lg p-6 text-center\\">\\n              <i class=\\"fas fa-crown text-orange-400 text-3xl mb-4\\"></i>\\n              <h4 class=\\"text-xl font-bold text-orange-300 mb-4\\">Unlock Premium Smart Contracts</h4>\\n              <div class=\\"text-left max-w-2xl mx-auto mb-6\\">\\n                <p class=\\"text-slate-300 mb-4\\">Experience enterprise-grade smart contract generation:</p>\\n                <div class=\\"grid md:grid-cols-2 gap-4 text-sm\\">\\n                  <div>\\n                    <h5 class=\\"text-orange-400 font-semibold mb-2\\">Advanced AI Models</h5>\\n                    <ul class=\\"text-slate-400 space-y-1\\">\\n                      <li>â€¢ GPT-4o for complex logic</li>\\n                      <li>â€¢ Claude Sonnet 4 for security</li>\\n                      <li>â€¢ 2-3x better code quality</li>\\n                    </ul>\\n                  </div>\\n                  <div>\\n                    <h5 class=\\"text-orange-400 font-semibold mb-2\\">Pro Features</h5>\\n                    <ul class=\\"text-slate-400 space-y-1\\">\\n                      <li>â€¢ Gas optimization</li>\\n                      <li>â€¢ Advanced security patterns</li>\\n                      <li>â€¢ Production architecture</li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\"flex gap-4 justify-center\\">\\n                <button \\n                  on:click={() => selectedModel = 'free'}\\n                  class=\\"bg-slate-600 hover:bg-slate-500 text-white px-6 py-2 rounded-lg transition-colors\\"\\n                >\\n                  <i class=\\"fas fa-arrow-left mr-2\\"></i>\\n                  Back to Free\\n                </button>\\n                <button \\n                  class=\\"bg-gradient-to-r from-orange-500 to-pink-500 hover:from-orange-600 hover:to-pink-600 text-white px-6 py-2 rounded-lg transition-colors font-semibold\\"\\n                >\\n                  <i class=\\"fas fa-rocket mr-2\\"></i>\\n                  Get Early Access\\n                </button>\\n              </div>\\n            </div>\\n          {:else}\\n            <!-- Regular error message -->\\n            <div class=\\"bg-red-900/20 border border-red-500/30 rounded-lg p-6 text-center\\">\\n              <i class=\\"fas fa-exclamation-triangle text-red-400 text-3xl mb-4\\"></i>\\n              <p class=\\"text-red-300 text-lg mb-4\\">{apiError}</p>\\n              <button \\n                on:click={generateContract}\\n                class=\\"bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded-lg transition-colors\\"\\n              >\\n                <i class=\\"fas fa-redo mr-2\\"></i>\\n                Try Again\\n              </button>\\n            </div>\\n          {/if}\\n        {:else}\\n          <div class=\\"bg-slate-900 rounded-lg p-6 overflow-x-auto border border-slate-600\\">\\n            <pre class=\\"text-green-400 text-sm leading-relaxed\\"><code>{generatedCode}</code></pre>\\n          </div>\\n          \\n          <!-- Code Quality Assessment -->\\n          {#if codeEvaluation}\\n          <div class=\\"mt-8 bg-gradient-to-br from-slate-800/50 to-slate-700/50 rounded-lg p-6 border border-slate-600/50\\">\\n            <h4 class=\\"text-xl font-bold text-white mb-6 flex items-center\\">\\n              <i class=\\"fas fa-chart-line text-yellow-400 mr-3\\"></i>\\n              Code Quality Assessment\\n            </h4>\\n            \\n            <div class=\\"grid md:grid-cols-2 gap-6\\">\\n              <!-- Foundation Quality Score -->\\n              <div class=\\"bg-slate-800/50 rounded-lg p-4 border border-slate-600/30\\">\\n                <div class=\\"flex items-center justify-between mb-3\\">\\n                  <span class=\\"text-slate-300 font-semibold\\">Foundation Quality</span>\\n                  <span class=\\"text-2xl font-bold text-cyan-400\\">{codeEvaluation.foundationScore}/10</span>\\n                </div>\\n                <div class=\\"w-full bg-slate-700 rounded-full h-2\\">\\n                  <div class=\\"bg-gradient-to-r from-cyan-400 to-blue-400 h-2 rounded-full\\" style=\\"width: {codeEvaluation.foundationScore * 10}%\\"></div>\\n                </div>\\n                <p class=\\"text-xs text-slate-400 mt-2\\">{codeEvaluation.foundationQuality}</p>\\n              </div>\\n              \\n              <!-- Security Score -->\\n              <div class=\\"bg-slate-800/50 rounded-lg p-4 border border-slate-600/30\\">\\n                <div class=\\"flex items-center justify-between mb-3\\">\\n                  <span class=\\"text-slate-300 font-semibold\\">Security Patterns</span>\\n                  <span class=\\"text-2xl font-bold text-green-400\\">{codeEvaluation.securityScore}/10</span>\\n                </div>\\n                <div class=\\"w-full bg-slate-700 rounded-full h-2\\">\\n                  <div class=\\"bg-gradient-to-r from-green-400 to-emerald-400 h-2 rounded-full\\" style=\\"width: {codeEvaluation.securityScore * 10}%\\"></div>\\n                </div>\\n                <p class=\\"text-xs text-slate-400 mt-2\\">\\n                  {#if codeEvaluation.securityScore >= 8}Enterprise-grade security patterns\\n                  {:else if codeEvaluation.securityScore >= 7}Professional security standards  \\n                  {:else if codeEvaluation.securityScore >= 6}Good security foundation\\n                  {:else}Basic security patterns{/if}\\n                </p>\\n              </div>\\n            </div>\\n            \\n            <!-- Development Stage Indicator -->\\n            <div class=\\"mt-6 bg-blue-900/20 border border-blue-400/30 rounded-lg p-4\\">\\n              <div class=\\"flex items-center justify-between\\">\\n                <div>\\n                  <h5 class=\\"text-lg font-bold text-blue-400 flex items-center\\">\\n                    <i class=\\"fas fa-code-branch mr-2\\"></i>\\n                    Development Stage: {codeEvaluation.developmentStage}\\n                  </h5>\\n                  <p class=\\"text-sm text-slate-300 mt-1\\">Estimated time to production: {codeEvaluation.timeToProduction}</p>\\n                </div>\\n                <div class=\\"text-right\\">\\n                  <div class=\\"inline-flex items-center bg-blue-500/20 rounded-full px-3 py-1\\">\\n                    <div class=\\"w-2 h-2 bg-blue-400 rounded-full animate-pulse mr-2\\"></div>\\n                    <span class=\\"text-blue-400 text-sm font-semibold\\">Ready for Development</span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\"grid md:grid-cols-2 gap-6 mt-6\\">\\n              <!-- What's Already Built -->\\n              <div>\\n                <h5 class=\\"text-lg font-bold text-green-400 mb-3 flex items-center\\">\\n                  <i class=\\"fas fa-check-circle mr-2\\"></i>\\n                  Foundation Strengths\\n                </h5>\\n                <ul class=\\"space-y-2 text-sm\\">\\n                  {#each codeEvaluation.goodFeatures as feature}\\n                  <li class=\\"flex items-start gap-2 text-slate-300\\">\\n                    <i class=\\"fas fa-star text-green-400 mt-1 text-xs\\"></i>\\n                    {feature}\\n                  </li>\\n                  {/each}\\n                  {#if codeEvaluation.goodFeatures.length === 0}\\n                  <li class=\\"text-slate-400 italic\\">Solid smart contract structure</li>\\n                  {/if}\\n                </ul>\\n              </div>\\n              \\n              <!-- Next Development Steps -->\\n              <div>\\n                <h5 class=\\"text-lg font-bold text-blue-400 mb-3 flex items-center\\">\\n                  <i class=\\"fas fa-rocket mr-2\\"></i>\\n                  Next Development Steps\\n                </h5>\\n                <ul class=\\"space-y-2 text-sm\\">\\n                  {#each codeEvaluation.nextSteps as step}\\n                  <li class=\\"flex items-start gap-2 text-slate-300\\">\\n                    <i class=\\"fas fa-arrow-right text-blue-400 mt-1 text-xs\\"></i>\\n                    {step}\\n                  </li>\\n                  {/each}\\n                  {#if codeEvaluation.nextSteps.length === 0}\\n                  <li class=\\"text-slate-400 italic\\">Ready for testing and deployment</li>\\n                  {/if}\\n                </ul>\\n              </div>\\n            </div>\\n            \\n            <!-- Developer Action Items -->\\n            <div class=\\"mt-6 bg-gradient-to-r from-green-900/20 to-blue-900/20 border border-green-500/30 rounded-lg p-4\\">\\n              <h5 class=\\"text-lg font-bold text-green-400 mb-3 flex items-center\\">\\n                <i class=\\"fas fa-tasks mr-2\\"></i>\\n                Development Roadmap\\n              </h5>\\n              <div class=\\"grid md:grid-cols-2 gap-4\\">\\n                {#each codeEvaluation.devTasks as task, index}\\n                  {#if index % 2 === 0}\\n                  <div class=\\"space-y-2\\">\\n                    <label class=\\"flex items-center gap-2 text-sm text-slate-300 cursor-pointer\\">\\n                      <input type=\\"checkbox\\" class=\\"text-green-400 rounded\\" />\\n                      {task}\\n                    </label>\\n                  </div>\\n                  {:else}\\n                  <div class=\\"space-y-2\\">\\n                    <label class=\\"flex items-center gap-2 text-sm text-slate-300 cursor-pointer\\">\\n                      <input type=\\"checkbox\\" class=\\"text-green-400 rounded\\" />\\n                      {task}\\n                    </label>\\n                  </div>\\n                  {/if}\\n                {/each}\\n                {#if codeEvaluation.devTasks.length === 0}\\n                <div class=\\"col-span-2\\">\\n                  <label class=\\"flex items-center gap-2 text-sm text-slate-300 cursor-pointer\\">\\n                    <input type=\\"checkbox\\" class=\\"text-green-400 rounded\\" />\\n                    Add comprehensive testing suite\\n                  </label>\\n                  <label class=\\"flex items-center gap-2 text-sm text-slate-300 cursor-pointer mt-2\\">\\n                    <input type=\\"checkbox\\" class=\\"text-green-400 rounded\\" />\\n                    Deploy to testnet for validation\\n                  </label>\\n                </div>\\n                {/if}\\n              </div>\\n              \\n              <!-- Encouraging message -->\\n              <div class=\\"mt-4 p-3 bg-green-500/10 border border-green-400/20 rounded-lg\\">\\n                <p class=\\"text-sm text-green-300 flex items-center\\">\\n                  <i class=\\"fas fa-lightbulb mr-2\\"></i>\\n                  <strong>Great start!</strong> You have a solid foundation with industry best practices. \\n                  Complete the checklist above to make this production-ready.\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          {/if}\\n        {/if}\\n      </div>\\n    {/if}\\n\\n    <!-- Professional divider -->\\n    <div class=\\"flex items-center my-12\\">\\n      <div class=\\"flex-1 h-px bg-gradient-to-r from-transparent via-slate-600 to-transparent\\"></div>\\n      <div class=\\"px-4\\">\\n        <i class=\\"fas fa-chevron-down text-slate-500\\"></i>\\n      </div>\\n      <div class=\\"flex-1 h-px bg-gradient-to-r from-transparent via-slate-600 to-transparent\\"></div>\\n    </div>\\n\\n    <!-- Complete 3-Step Workflow -->\\n    <div class=\\"bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-slate-800/20 rounded-xl p-8 border border-cyan-400/20\\">\\n      <h3 class=\\"text-3xl font-bold mb-8 text-center text-white\\">\\n        <i class=\\"fas fa-rocket text-orange-500 mr-3\\"></i>\\n        What's Next? Deploy Your Contract\\n      </h3>\\n      \\n      <div class=\\"grid md:grid-cols-3 gap-6 mb-8\\">\\n        <div class=\\"bg-slate-800/50 rounded-lg p-6 border border-slate-600 hover:border-cyan-400 transition-colors group\\">\\n          <div class=\\"flex items-center gap-3 mb-4\\">\\n            <div class=\\"w-10 h-10 bg-gradient-to-br from-cyan-400 to-cyan-600 text-slate-900 rounded-full flex items-center justify-center font-bold text-lg\\">\\n              1\\n            </div>\\n            <h4 class=\\"text-xl font-bold text-cyan-400 group-hover:text-cyan-400\\">Copy Code</h4>\\n          </div>\\n          <p class=\\"text-slate-300 mb-4\\">Use the copy button above to grab your generated contract code.</p>\\n          <div class=\\"text-xs text-cyan-400 font-mono bg-slate-900/50 p-2 rounded\\">\\n            Ctrl+C / Cmd+C\\n          </div>\\n        </div>\\n        \\n        <div class=\\"bg-slate-800/50 rounded-lg p-6 border border-slate-600 hover:border-orange-500 transition-colors group\\">\\n          <div class=\\"flex items-center gap-3 mb-4\\">\\n            <div class=\\"w-10 h-10 bg-gradient-to-br from-orange-500 to-orange-600 text-slate-900 rounded-full flex items-center justify-center font-bold text-lg\\">\\n              2\\n            </div>\\n            <h4 class=\\"text-xl font-bold text-orange-400 group-hover:text-orange-400\\">Open Remix IDE</h4>\\n          </div>\\n          <p class=\\"text-slate-300 mb-4\\">Paste your code into the free, web-based Solidity IDE.</p>\\n          <a \\n            href=\\"https://remix.ethereum.org\\" \\n            target=\\"_blank\\" \\n            rel=\\"noopener noreferrer\\"\\n            class=\\"inline-flex items-center text-orange-400 hover:text-orange-300 font-semibold transition-colors\\"\\n          >\\n            <i class=\\"fas fa-external-link-alt mr-2\\"></i>\\n            Open Remix â†’\\n          </a>\\n        </div>\\n        \\n        <div class=\\"bg-slate-800/50 rounded-lg p-6 border border-slate-600 hover:border-blue-400 transition-colors group\\">\\n          <div class=\\"flex items-center gap-3 mb-4\\">\\n            <div class=\\"w-10 h-10 bg-gradient-to-br from-blue-400 to-blue-600 text-slate-900 rounded-full flex items-center justify-center font-bold text-lg\\">\\n              3\\n            </div>\\n            <h4 class=\\"text-xl font-bold text-blue-400 group-hover:text-blue-400\\">Compile & Deploy</h4>\\n          </div>\\n          <p class=\\"text-slate-300 mb-4\\">Test on Sepolia testnet before mainnet deployment.</p>\\n          <div class=\\"text-xs text-blue-400 font-mono bg-slate-900/50 p-2 rounded\\">\\n            Solidity ^0.8.20\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <!-- Call to action -->\\n      <div class=\\"text-center\\">\\n        <div class=\\"mb-4\\">\\n          <span class=\\"text-slate-400\\">Want to learn more about our vision?</span>\\n        </div>\\n        <a \\n          href=\\"/deep-dive/the-convergent-economy\\" \\n          class=\\"inline-flex items-center bg-gradient-to-r from-slate-700 to-slate-600 hover:from-slate-600 hover:to-slate-500 text-white font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg\\"\\n        >\\n          <i class=\\"fas fa-book-open mr-3\\"></i>\\n          Explore The Convergent Economy\\n          <i class=\\"fas fa-arrow-right ml-3\\"></i>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<style>\\n  .loader {\\n    width: 20px;\\n    height: 20px;\\n    border: 2px solid #FFF;\\n    border-bottom-color: #ea580c;\\n    border-radius: 50%;\\n    display: inline-block;\\n    box-sizing: border-box;\\n    animation: rotation 1s linear infinite;\\n  }\\n\\n  @keyframes rotation {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n  }\\n\\n  .deep-dive-label {\\n    font-size: 1rem;\\n    font-weight: 700;\\n    letter-spacing: 0.2em;\\n    text-transform: uppercase;\\n    color: #0cc0df;\\n    position: relative;\\n    display: inline-block;\\n  }\\n\\n  .deep-dive-label::after {\\n    content: '';\\n    position: absolute;\\n    bottom: -4px;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    width: 60px;\\n    height: 2px;\\n    background: #0cc0df;\\n    opacity: 0.6;\\n  }\\n</style>"],"names":[],"mappings":"AAwyBE,sBAAQ,CACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,mBAAmB,CAAE,OAAO,CAC5B,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,UAAU,CACtB,SAAS,CAAE,uBAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAChC,CAEA,WAAW,uBAAS,CAClB,EAAG,CAAE,SAAS,CAAE,OAAO,IAAI,CAAG,CAC9B,IAAK,CAAE,SAAS,CAAE,OAAO,MAAM,CAAG,CACpC,CAEA,+BAAiB,CACf,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,KAAK,CACrB,cAAc,CAAE,SAAS,CACzB,KAAK,CAAE,OAAO,CACd,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,YACX,CAEA,+BAAgB,OAAQ,CACtB,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,GACX"}`},f=i((t,u,p,m)=>{let n="";const a=["An ERC-1155 contract where the minting fee is split 90% to the artist and 10% to the platform.","A simple voting contract where users can vote on proposals with a deadline.","An ERC20 token with built-in staking rewards for holders.","A marketplace contract for buying and selling digital assets with escrow functionality.","A time-locked vault contract that releases tokens after a specific date.","A multi-signature wallet contract requiring 2 out of 3 signatures for transactions."];let s=0;return t.css.add(c),`  ${t.head+=`<!-- HEAD_svelte-192a2si_START -->${t.title="<title>Smart Contract Generator | theBlockchain.ai</title>",""}<meta name="description" content="Generate Solidity smart contracts using AI. Describe your logic in plain English and get production-ready code."><!-- HEAD_svelte-192a2si_END -->`,""}  <div class="min-h-screen bg-slate-900 text-white"><div class="relative bg-gradient-to-br from-orange-900 via-slate-800 to-slate-900"><div class="absolute inset-0 bg-black/20"></div> <div class="relative max-w-5xl mx-auto px-6 py-24"><div class="text-center"><div class="deep-dive-label mb-6 svelte-181uuui" data-svelte-h="svelte-1vinlcb">âœ¨ AI-POWERED TOOLS</div> <h1 class="text-4xl md:text-6xl font-black mb-6 leading-tight" data-svelte-h="svelte-so5ugb"><span class="block text-white">SMART CONTRACT</span> <span class="block bg-gradient-to-r from-orange-500 to-cyan-400 bg-clip-text text-transparent">GENERATOR</span></h1> <p class="text-xl md:text-2xl text-slate-300 max-w-4xl mx-auto leading-relaxed mb-8" data-svelte-h="svelte-yteeoe">Have an idea for a protocol? Describe the logic in plain English, and let Gemini generate the Solidity boilerplate. Your next project starts here.</p> <div class="inline-flex items-center bg-slate-800/50 rounded-full px-6 py-3 border border-orange-500/30"><div class="w-2 h-2 bg-orange-500 rounded-full animate-pulse mr-3"></div> <span class="text-orange-600 font-mono font-bold">${e(s)}</span> <span class="text-slate-300 ml-2" data-svelte-h="svelte-rmvg3z">contracts generated today</span></div></div></div></div> <div class="max-w-5xl mx-auto px-6 py-16"> <div class="bg-gradient-to-r from-slate-800 to-slate-700 rounded-xl p-6 mb-6 border border-slate-600"><h3 class="text-lg font-bold text-white mb-4 flex items-center" data-svelte-h="svelte-1t6dea0"><i class="fas fa-robot mr-2 text-cyan-400"></i>
        Choose Your AI Model</h3> <div class="grid md:grid-cols-2 gap-4"> <label class="cursor-pointer"><input type="radio" value="free" class="sr-only"${l("checked",!0,1)}> <div class="${["relative p-4 rounded-lg border-2 transition-all duration-300","border-cyan-400  "].join(" ").trim()}" style="${"background-color: "+e("rgba(6, 182, 212, 0.1)",!0)}">&gt;
            <div class="flex items-center justify-between mb-2"><h4 class="text-lg font-bold text-white flex items-center" data-svelte-h="svelte-rgmzlt"><span class="bg-green-500 text-white px-2 py-1 rounded text-xs font-bold mr-2">FREE</span>
                Basic Generator</h4> <i class="fas fa-check-circle text-cyan-400 text-xl"></i></div> <p class="text-slate-300 text-sm mb-3" data-svelte-h="svelte-1mm1h3l">Perfect for learning and prototyping</p> <ul class="text-xs text-slate-400 space-y-1" data-svelte-h="svelte-2fgxry"><li>â€¢ Gemini 2.0 Flash</li> <li>â€¢ 5 generations per day</li> <li>â€¢ Basic security analysis</li> <li>â€¢ Standard templates</li></ul></div></label>  <label class="cursor-pointer"><input type="radio" value="premium" class="sr-only"> <div class="${["relative p-4 rounded-lg border-2 transition-all duration-300"," border-slate-600 bg-slate-800"].join(" ").trim()}" style="${"background-color: "+e("rgba(30, 41, 59, 0.5)",!0)}">&gt;
            <div class="flex items-center justify-between mb-2"><h4 class="text-lg font-bold text-white flex items-center" data-svelte-h="svelte-pbc3hh"><span class="bg-gradient-to-r from-orange-500 to-pink-500 text-white px-2 py-1 rounded text-xs font-bold mr-2">PRO</span>
                Advanced Generator</h4> </div> <p class="text-slate-300 text-sm mb-3" data-svelte-h="svelte-sxbbwo">Production-ready foundations</p> <ul class="text-xs text-slate-400 space-y-1" data-svelte-h="svelte-17h83s5"><li>â€¢ GPT-4o + Claude Sonnet 4</li> <li>â€¢ Unlimited generations</li> <li>â€¢ Advanced security analysis</li> <li>â€¢ Gas optimization</li> <li>â€¢ Priority support</li></ul> <div class="mt-3 pt-3 border-t border-slate-600" data-svelte-h="svelte-upgz78"><span class="text-orange-400 font-semibold text-sm">$29/month</span> <span class="text-slate-500 text-xs ml-2">Try free for 7 days</span></div></div></label></div> </div> <div class="bg-slate-800 rounded-xl p-8 mb-8 border border-slate-700"><label for="prompt-input" class="block text-xl font-bold mb-4 text-cyan-400" data-svelte-h="svelte-fq93le"><i class="fas fa-code mr-2"></i>
        Describe your smart contract logic:</label> <div class="relative"><textarea id="prompt-input" placeholder="e.g., An ERC721 contract where the minting fee is split 90% to the artist and 10% to the platform..." class="w-full h-36 bg-slate-900 border-2 border-slate-600 rounded-lg p-4 text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-cyan-400 resize-none transition-all duration-300" >${e("")}</textarea> <div class="absolute bottom-3 right-3 text-xs text-slate-500">${e(n.length)} characters</div></div> <div class="flex items-center justify-between mt-6"><button ${n.trim()?"":"disabled"} class="bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 disabled:from-slate-600 disabled:to-slate-600 disabled:cursor-not-allowed text-white font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 disabled:hover:scale-100 shadow-lg"><i class="fas fa-magic mr-2"></i> Generate Solidity Contract</button> <div class="flex items-center text-slate-400 text-sm">Powered by ðŸ§  Gemini 2.0 Flash</div></div></div> <div class="mb-8"><h3 class="text-2xl font-bold mb-6 text-white flex items-center" data-svelte-h="svelte-1upg5xa"><i class="fas fa-lightbulb text-yellow-400 mr-3"></i>
        Try these examples:</h3> <div class="grid md:grid-cols-2 gap-4">${d(a,(o,r)=>`<button class="text-left bg-slate-700 hover:bg-slate-600 p-4 rounded-lg transition-all duration-300 text-slate-300 hover:text-white border border-slate-600 hover:border-cyan-400 group"><div class="flex items-start gap-3"><div class="w-6 h-6 bg-cyan-400 text-slate-900 rounded-full flex items-center justify-center font-bold text-sm group-hover:bg-orange-500 transition-colors">${e(r+1)}</div> <div class="flex-1"><p class="text-sm leading-relaxed">&quot;${e(o)}&quot;</p> </div></div> </button>`)}</div></div>   <div class="flex items-center my-12" data-svelte-h="svelte-8yyjrs"><div class="flex-1 h-px bg-gradient-to-r from-transparent via-slate-600 to-transparent"></div> <div class="px-4"><i class="fas fa-chevron-down text-slate-500"></i></div> <div class="flex-1 h-px bg-gradient-to-r from-transparent via-slate-600 to-transparent"></div></div>  <div class="bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-slate-800/20 rounded-xl p-8 border border-cyan-400/20" data-svelte-h="svelte-amkcay"><h3 class="text-3xl font-bold mb-8 text-center text-white"><i class="fas fa-rocket text-orange-500 mr-3"></i>
        What&#39;s Next? Deploy Your Contract</h3> <div class="grid md:grid-cols-3 gap-6 mb-8"><div class="bg-slate-800/50 rounded-lg p-6 border border-slate-600 hover:border-cyan-400 transition-colors group"><div class="flex items-center gap-3 mb-4"><div class="w-10 h-10 bg-gradient-to-br from-cyan-400 to-cyan-600 text-slate-900 rounded-full flex items-center justify-center font-bold text-lg">1</div> <h4 class="text-xl font-bold text-cyan-400 group-hover:text-cyan-400">Copy Code</h4></div> <p class="text-slate-300 mb-4">Use the copy button above to grab your generated contract code.</p> <div class="text-xs text-cyan-400 font-mono bg-slate-900/50 p-2 rounded">Ctrl+C / Cmd+C</div></div> <div class="bg-slate-800/50 rounded-lg p-6 border border-slate-600 hover:border-orange-500 transition-colors group"><div class="flex items-center gap-3 mb-4"><div class="w-10 h-10 bg-gradient-to-br from-orange-500 to-orange-600 text-slate-900 rounded-full flex items-center justify-center font-bold text-lg">2</div> <h4 class="text-xl font-bold text-orange-400 group-hover:text-orange-400">Open Remix IDE</h4></div> <p class="text-slate-300 mb-4">Paste your code into the free, web-based Solidity IDE.</p> <a href="https://remix.ethereum.org" target="_blank" rel="noopener noreferrer" class="inline-flex items-center text-orange-400 hover:text-orange-300 font-semibold transition-colors"><i class="fas fa-external-link-alt mr-2"></i>
            Open Remix â†’</a></div> <div class="bg-slate-800/50 rounded-lg p-6 border border-slate-600 hover:border-blue-400 transition-colors group"><div class="flex items-center gap-3 mb-4"><div class="w-10 h-10 bg-gradient-to-br from-blue-400 to-blue-600 text-slate-900 rounded-full flex items-center justify-center font-bold text-lg">3</div> <h4 class="text-xl font-bold text-blue-400 group-hover:text-blue-400">Compile &amp; Deploy</h4></div> <p class="text-slate-300 mb-4">Test on Sepolia testnet before mainnet deployment.</p> <div class="text-xs text-blue-400 font-mono bg-slate-900/50 p-2 rounded">Solidity ^0.8.20</div></div></div>  <div class="text-center"><div class="mb-4"><span class="text-slate-400">Want to learn more about our vision?</span></div> <a href="/deep-dive/the-convergent-economy" class="inline-flex items-center bg-gradient-to-r from-slate-700 to-slate-600 hover:from-slate-600 hover:to-slate-500 text-white font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg"><i class="fas fa-book-open mr-3"></i>
          Explore The Convergent Economy
          <i class="fas fa-arrow-right ml-3"></i></a></div></div></div> </div>`});export{f as default};
